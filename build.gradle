// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    // This is the repository for the build plugins, not the build itself
    repositories {
        if (project.getProperties().get('localPublishEnabled', false)) {
            mavenLocal()
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'com.lookout.gradle:plugin:3.3.59'

        // Workaround for lint crashing on lambdas:
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
    }

    // Workaround for lint crashing on lambdas:
    // Exclude the version that the android plugin depends on.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

// This is the repository for the build artifacts
repositories {
    maven {
        if (project.getProperties().get('localPublishEnabled', false)) {
            mavenLocal()
        }
        // if you need to pull in a snapshot, change to
        // libs-all for DEBUG ONLY
        url "${project.context_url}/libs-release"
    }
}

subprojects {
    // Change to libs-all to pull in snapshots
    // (during development only)
    def repo = 'libs-release'

    def useLocal = project.properties.get('localPublishEnabled', false)

    buildscript {
        repositories {
            if (useLocal) {
                mavenLocal()
            }

            maven {
                url "${context_url}/${repo}"
            }
        }
    }

    repositories {
        if (useLocal) {
            mavenLocal()
        }

        maven {
            url "${context_url}/${repo}"
        }
    }

    apply plugin: 'checkstyle'

    task checkstyle(type: Checkstyle) {
        configFile file('tools/checkstyle/checkstyle.xml')
        source 'src'
        include '**/*.java'
        exclude '**/gen/**'
        classpath = files()
    }
}

